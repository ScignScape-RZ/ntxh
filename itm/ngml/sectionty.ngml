
`section.Link Grammar and Type Theoretic Semantics`

`p.
To build up a linguistic type theory, I assume, then, a framework of
types and type associations with a few underlying properties, such as
these:

\renewcommand{\labelitemi}{$\bullet$}

`itemize,
`item; Types have a spectrum of granularity, from the very broad (Parts
of Speech) to the much narrower,
including (at the fine end of the scale) where
they incorporate lexical data
(types can potentially include `i.rhino`/, `i.house`/, and so on).
In between are constructions related to `q.Ontology`/,
like sentient/nonsentient, pointwise/extended, artifact/institution, among many others.

`item; Types are neither strictly grammatic nor strictly semantic, but
their gradations of precision cross between grammar and semantics.

`item;  Returning to `q.Ontology`/: types have associated qualities like sentient/nonsentient;
spatially (and/or temporally) extended, pointwise, or non-spatial
(/non-temporal); caused, self-causing, self-determining, affected by
other things, affecting other things; objects, events, processes, or
institutions; abstracta or spatetime present things; observables
or subjectives like emotions or sensations, which are temporally present
for someone but not (directly) encountered by others.  These are qualities
pertaining to the manner of referents' appearing, causing, and extending
in the world and in consciousness, and to a `q.classification` of kinds
of entities (like a metaphysical Ontology, though the point is not
to reproduce Medieval philosophy but, more modestly, to catalog word senses).
I will refer to these qualities generically as `q.associations`/.  They may be
introduced via subtyping or more complex type operators.

`item;  Some types are `q.function like`/: this means that they are
`i.applied` to senses which have their own types.  This introduces one
form of head/dependent relation, where a head word instances a
function-like type and is applied to one or more `q.dependents`/.

`item;  Type information `q.distributes over` Link Grammar pairs.  For
any pair of words which have a meaningful inter-word relation, we can
consider types which may be applicable to both words, and how these
types affect and are affected by the significance of the particular
kind of link.  Some kinds of links mandate particular type
interpretations of the links elements: `TS; links,`footnote.
http://www.link.cs.cmu.edu/link/dict/section-TS.html
`footnote` to cite a narrow
example, would only be formed between verb and `Prop; types (at least
this is a plausible interpretation of the relevant Link Grammar rules.
Other type/link combinations are more
open-ended.

`item;  Type information similarly `q.distributes` over clusters of
link-pairs, where the presence of one such link influences how a
connected link is understood (or whether it is allowed).  Type-related
qualifications can propagate from one link-pair to connected
link-pairs.`footnote.
For example, we can say that the linkage structure in
`q.Three times students asked an interesting question` alters the
normal type-attribution of `q.students` as just a plural noun;
relative to the connected structure linking `q.three times` through
`q.students` to `q.a question`/, we can say that `i.three times`
modifies `q.students` so that it may function, as subject of
`q.asked`/, as if typed as singular, because `i.three times` acts as a
`q.space builder` and creates a mental frame wherein the students are
singular, even if the word is plural.  Because of this frame
phenomenon, the singular/plural status of students does not propagate
to `q.a question`/; collectively they presumably did  not all ask just
one question.  Type annotation for `q.students` has to be defined,
in this case, relative to multiple `q.cognitive frames`/.
`footnote`

`item;  Type information also `q.distributes over` applicative
structures.  Given a function-like type we can consider how
associations for the head and dependent elements propagate to
associations on the resulting phrase %-- again, via subtyping or some
other mechanism.
`itemize`

Such a `q.linguistic type theory` needs to model (at the least) these
aforementioned associations, the `q.distribution` of type details over
link and applicative structures, and the `q.propagation` of
associations and other type details.  While informal analyses in any
single case may be clear, integrating many case-studies into a unified
theory can be advanced by drawing ideas from rigorous, quasi-mathematical
type theories %-- relevant research has adopted technical
formations like `q.dot-types`/, higher-order types, dependent types,
Monoidal Categories, Tensors, Continuations, `q.Linguistic Side Effects`/,
Monads, Combinatory Logic, and (Mereo)Topology/Geometry.`footnote.
Monoids: `cite<DelpeuchPreller>;;
Tensors: `cite<MaillardClarkGrefenstette>;;
Continuations: `cite<BarkerShan>;;
Combinators: `cite<Villadsen>;;
Side Effects: `cite<ShanThesis>;;
Monads: `cite<GiorgoloAsudeh>;, `cite<ShanMonads>;, `cite<Kiselyov>;;
Topology: `cite<JeanPetitot>;, `cite<CasatiVarzi>;.
`footnote`  Such techniques can marshal type-theoretic ideas without
falling back on simplistic type notions that can end up collapsing a type-system into a
one-dimensional `q.Ontological` classification, rather than exploring more advanced formulations
like higher-order types and (what I am callling) `q.associations`/.
`p`

`p.
With respect to Type Theory related to Link Grammar, consider again the `TS; links
(there are dozens of potential link-grammar pairs, of which `TS; are among the
less common, but they provide a useful example).  First, note that `Prop; provides a
type attribution for sentences, but also for sentence parts: `i.he is at school`/,
for example, presents a complete idea, either as its own sentence or part of a
larger one.  In the latter case, a `Prop; phrase would typically be preceded with a
word like `i.that`/; in the case of Link Grammar, we can define words relative
to their semantic and/or syntactic role, which often lies primarily in linking
with other parts of a sentence or helping those parts link with each other.
Type-theoretically, however, we may want to assign types to every word, even those
which seem auxiliary and lacking much or any semantic content of their own.
Arguably, `i.that` serves to `q.package` an assertion, encapsulating
a proposition as a presumed fact designated as
one idea, for the sake of making further comments, as if `q.making a noun` out
of it: `PropToN;.  Perhaps our intuitions are more as if `i.that he is at school`
is also a proposition, maybe a subtly different kind, by analogy to how
questions and commands are also potentially `Prop; variants.  Since `thatPhrases; are `q.arguments` for verbs,
the choice then becomes whether it is useful to expand our type picture of verbs
so that they may act on propositions as well as nouns,
or rather type `q.encapsulated` propositions as just nouns
(maybe special kinds of nouns).
`p`

`p.
In either case, `i.I know that ...` clearly involves a verb with subject and direct
object: so either `VisNNtoProp; or `VisNProptoProp;.  Consider the role of a `TS;-link here:
specifically, `TS; connects the verb to the assertorial direct object (most
directly, to `i.that`/).  The purely formal consideration is ensuring that
types are consistent: either the `TS; target is `Prop;, as I suggested
above, with the verb type modified accordingly; or the `TS; target is a noun,
though here it is fair to narrow scope.  For this particular kind of
link, the target must express a proposition: either typed directly as
such or typed as, say, a noun `q.packaging` a proposition, which would then
be a higher-order type relation (just as `q.redness` is a noun `q.packaging`
an adjective, or `q.running` is an adjective packaging a verb).  In other words,
it is difficult to state the type restrictions on the link-pair without employing
more complex or higher-order type formations.
`p`

`p.
On the other hand, this is
another example of the fuzzy boundary between syntax and semantics: given a sentence
which seems to link a verb calling for a belief or assertion (like `q.know`/,
`q.think`/, `q.suggest`/, `q.to be glad`/) to something that is not proposition-like, is such a
configuration ungrammatical, or just hard to understand?  Clearly, the
`i.semantic` norms around verbs like `q.know` is that their `i.subject`
has some quality of sentience (or can be meaningfully attributed
belief-states, even if speakers know not to take it literally: `q.The function
doesn't know that this number will never be zero`/); and their `i.object` should
be somehow propositional.  But applying type theory (or type theory in conjunction
with Dependency Grammar) leaves open various analytic preferences: these
requirements can be presented as rigid grammatic rules or as `q.post-parsing`
semantic regulations.  How to model the qualities of sentience (or at least of having
propositional attitudes broadly conceived), for the noun, and of propositionality,
for the direct object, are again at the discretion
of the analysis (subtypes, quality-associations, or etc.) %-- Figure ~`ref<fig:Iknow>; shows one potential,
rather simplified unpacking of the sentence; from this structure details
can be added perhaps as extra syntax constraints or perhaps more as cues
to interpretation.`input<figure.tex>;  If these
requirements are seen as more syntactic, so qualities are incorporated into
data like Part of Speech (say, a noun designating something with propositional attitudes
being a subtype of of a generic `N; type), then we are more likely to analyze
violations as simply incorrect (recall `q.The tree wants to run away from the dog`
%-- ungrammatical or just somehow `q.exotic`/?).
Some examples suggest less incorrectness as clever or poetic usage %-- so a
richer analysis may recognize expressions as type- and link-wise acceptable, but
showing incongruities (which is not the same as impropriety)
at a more fine-grained type level.  That `i.to want` takes a subject
`i.associated` with sentience does not force type annotations to inscribe this
in grammatic or lexical laws; instead, these associations can be
introduced as potential `q.side effects`/, `i.triggering` re-associations
such as forcing hearers to ascribe sentience to something (like a tree) where
such ascription is not instinctive.  The type effect in this case lies more
at the conceptual level, the language-user sifting conceptual
backgrounds to find a configuration proper to the type requirements (in what
sense can a tree `q.want` something?).  In this `q.tree` case we probably
appeal to concepts of `q.as if`/: if the tree `i.were` sentient, it
would be nervous of the dog sniffing around %-- a humorous way of calling
attention to the dog's actions (obliquely maybe alluding to people's background
knowledge that dogs sometimes do things, like pee, in inconvenient
places, from humans' perspectives).
`p`

`p.
In brief, it is certainly possible %-- though by no means mandatory %-- to model
type requirements with greater flexibility at a provisional grammatical layer,
and then narrow in on subtypes or extra accumulations of qualifications on
type-instances in a transition from grammar to semantics.  Perhaps cognitive
schema occupy an intermediary role: progressing from basic recognition of
grammaticality, through cognitive schema, to conceptual framing, with type
machinery capturing some of the thought-processes at each `q.step`
(not that such `q.steps` are necessarily in a temporal sequence).  The basic
verb-subject-direct object articulation sets up an underlying cognitive
attitude (represented by a basic type-framing of verb, noun, and proposition,
like the `VisNNtoProp; signature).  Cognitive ascriptions fill this out
by adding detail to the broader-hewed typing, associating sentience with the
subject and propositionality with the object (sub- or higher-order typing
modeling this stage).  And how the actual lexical choices fit these cognitive
expectations %-- I call them cognitive because they are intrinsically tied
to structurational schema in the type, morphology, and word-order givens
in the encountered language %-- compels conversants to dip into background
beliefs, finding concepts for the signified meanings that hew to the
intermediary cognitive manipulations (finding ways to conceptualize the
subject as sentient, for example).  This also has a potential type model,
perhaps as forcing a type conversion from a lexical element which does
not ordinarily fit the required framing (such as giving inanimate things
some fashion of sentience).  Type theory
can give a window onto unfolding intellection at these multiple stages,
although we need not conclude that the mind subconsciously doing this thinking
mimics a computer that churns through type transformations mechanically and exactly.
`p`

`p.
I envision the unfolding that I have just sketched out as something Phenomenological
%-- it arises from a unified and subjective consciousness, one marked by
embodied personal identity and social situation.  If there are structural stases
that can be found in this temporality of experience, these are not constitutive
of conscious reality but a mesh of rationality that supports it, like the veins in
a leaf.  Stuctural configurations can be lifted from language insofar as it is a
conscious, formally governed activity, and lifted from the ambient situations which
lend language context and meaning intents.  So any analytic emphasis on
structural fixpoints threaded through the lived temporality of consciousness is an
abstraction, but one that is deliberate and necessary if we want to make scientific
or in any other manner disputatable claims about how language and congition works.
In that spirit, then, I will try to condense the three `q.layers` of unfolding
understanding, which as I have sketched them are posited in the metaphysical order
of temporal experience %-- `q.unfolding` in likely overlapping, blending ways
%-- I will `q.read into` them a more static and logically stacked meta-structure.
Where I have sketched three layers or stages of unfolding language understanding,
I will transition to proposing three `q.tiers` of language organization, in particular
three levels where type-theoretic models can be applied.
`p`


