\BOOKMARK [1][-]{Doc-Start}{Hypergraph-Based Type Theory ...}{}% 1
\BOOKMARK [1][-]{section.1}{Hub Applications and Gatekeeper Code}{}% 2
\BOOKMARK [2][-]{section*.2}{Gatekeeper Code}{section.1}% 3
\BOOKMARK [2][-]{section*.3}{Fragile Code}{section.1}% 4
\BOOKMARK [2][-]{section*.4}{Core Language vs. External Tools}{section.1}% 5
\BOOKMARK [1][-]{section.2}{Case Studies}{}% 6
\BOOKMARK [2][-]{section*.6}{How Internet of Things Interoperability Affects Data Modeling Priorities}{section.2}% 7
\BOOKMARK [2][-]{section*.7}{Linguistic Case-Study}{section.2}% 8
\BOOKMARK [2][-]{section*.8}{Proactive Design}{section.2}% 9
\BOOKMARK [1][-]{section.3}{Directed Hypergraphs and Generalized Lambda Calculus}{}% 10
\BOOKMARK [2][-]{section*.11}{Generalized Lambda Calculus}{section.3}% 11
\BOOKMARK [2][-]{section*.12}{Directed Hypergraphs and 'Channel Abstractions'}{section.3}% 12
\BOOKMARK [2][-]{section*.16}{Channelized Hypergraphs and RDF}{section.3}% 13
\BOOKMARK [2][-]{section*.21}{Procedural Input/Output Protocols via Type Theory}{section.3}% 14
\BOOKMARK [3][-]{subsubsection.3.4.1}{Kinds of Abstraction}{section*.21}% 15
\BOOKMARK [3][-]{subsubsection.3.4.2}{Channelized Type Systems}{section*.21}% 16
\BOOKMARK [1][-]{section.4}{Modeling Procedures via Channelized Hypergraphs}{}% 17
\BOOKMARK [2][-]{section*.23}{Initializing Function-Typed Values}{section.4}% 18
\BOOKMARK [3][-]{subsubsection.4.1.1}{Addressability and Implementation}{section*.23}% 19
\BOOKMARK [2][-]{section*.25}{Dependent Types and Co-Constructors}{section.4}% 20
\BOOKMARK [3][-]{subsubsection.4.2.1}{Dependent Types and Typestate}{section*.25}% 21
\BOOKMARK [3][-]{subsubsection.4.2.2}{Simulating Dependent Types with Preconstructors}{section*.25}% 22
\BOOKMARK [1][-]{section.5}{Channels and Carriers}{}% 23
\BOOKMARK [2][-]{section*.27}{Carrier Transfers}{section.5}% 24
\BOOKMARK [3][-]{subsubsection.5.1.1}{Channel Groups and Code Graphs}{section*.27}% 25
\BOOKMARK [2][-]{section*.29}{Channelized-Type Interpretations of Larger-Scale Source Code Elements}{section.5}% 26
\BOOKMARK [3][-]{subsubsection.5.2.1}{Statements, Blocks, and Control Flow}{section*.29}% 27
\BOOKMARK [3][-]{subsubsection.5.2.2}{Code Blocks as Typed Values}{section*.29}% 28
\BOOKMARK [1][-]{section.6}{Conclusion}{}% 29
\BOOKMARK [1][-]{section*.32}{References}{}% 30
